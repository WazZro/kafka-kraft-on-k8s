---
apiVersion: v1
kind: Namespace
metadata:
  name: kafka

---
apiVersion: v1
kind: Service
metadata:
  name: kafka-svc
  labels:
    app: kafka-svc
  annotations:
    "prometheus.io/scrape": "true"
    "prometheus.io/port": "9000"
  namespace: kafka
spec:
  type: ClusterIP
  ports:
    - name: '9092'
      port: 9092
      protocol: TCP
      targetPort: 9092
    - name: '9000'
      port: 9000
      protocol: TCP
      targetPort: 9000
  selector:
    app: kafkakraft

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  labels:
    app: kafkakraft
  namespace: kafka
spec:
  selector:
    matchLabels:
      app: kafkakraft
  serviceName: kafka-svc
  replicas: 3
  template:
    metadata:
      labels:
        app: kafkakraft
    spec:
      securityContext:
        runAsNonRoot: true
        fsGroup: 1001
        runAsUser: 1001
        runAsGroup: 1001
      containers:
        - name: kafka-container
          image: kafkakraft/kafkakraft:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 9092
            - containerPort: 9093
          env:                           # for configuration examples see official Kafka docu
            - name: REPLICAS             # https://kafka.apache.org/documentation/#configuration
              value: '3'                 #! ENVs are mandatory and defined in the entrypoint.sh
            - name: SERVICE
              value: kafka-svc
            - name: NAMESPACE
              value: kafka
            - name: SHARE_DIR
              value: /mnt/kafka
            - name: CLUSTER_ID
              value: QwjfU6MPQ_CMdFsbCx7EGg
            - name: DEFAULT_REPLICATION_FACTOR
              value: '3'
            - name: DEFAULT_MIN_INSYNC_REPLICAS
              value: '2'
            - name: KAFKA_NUM_PARTITIONS
              value: '8'
            - name: AUTO_CREATE_TOPICS_ENABLE
              value: 'true'
          volumeMounts:
            - name: kafka-storage-data
              mountPath: /mnt/kafka
  volumeClaimTemplates:
    - metadata:
        name: kafka-storage-data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: 100Gi
