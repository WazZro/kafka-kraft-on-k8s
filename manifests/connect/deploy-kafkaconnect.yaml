---
apiVersion: v1
kind: Service
metadata:
  name: kafka-connect-svc
  labels:
    app: kafka-connect-svc
  namespace: kafka
  annotations:
    "prometheus.io/scrape": "true"
    "prometheus.io/port": "9000"
spec:
  clusterIP: None
  ports:
    - name: '8083'
      port: 8083
      protocol: TCP
      targetPort: 8083
    - name: '9000'
      port: 9000
      protocol: TCP
      targetPort: 9000
  selector:
    app: kafka-connect

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka-connect
  labels:
    app: kafka-connect
  namespace: kafka
spec:
  selector:
    matchLabels:
      app: kafka-connect
  serviceName: kafka-connect-svc
  replicas: 3
  template:
    metadata:
      labels:
        app: kafka-connect
    spec:
      securityContext:
        runAsNonRoot: true
        fsGroup: 1001
        runAsUser: 1001
        runAsGroup: 1001
      containers:
        - name: kafka-connect-container
          image: kafkakraft/kafka-connect:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8083
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 1001
          env: []
          volumeMounts:
          - name: kafka-connect-storage-data
            mountPath: /mnt/kafka
  volumeClaimTemplates:
  - metadata:
      name: kafka-connect-storage-data
    spec:
      accessModes:
        - "ReadWriteOnce"
      resources:
        requests:
          storage: 10Gi
